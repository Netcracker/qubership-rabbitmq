{{- if and (not .Values.externalRabbitmq.enabled) (eq (include "disasterRecovery.enableTls" .) "true") (eq (include "rabbitmq.enableDisasterRecovery" .) "true") }}
{{- $secretName := include "disasterRecovery.tlsSecretName" . }}
{{- if and (eq (include "services.certProvider" .) "helm") (or (and .Values.global.tls.generateCerts.enabled (not (lookup "v1" "Secret" .Release.Namespace $secretName))) (and (not .Values.global.tls.generateCerts.enabled) (eq (include "disasterRecovery.certificatesSpecified" .) "true"))) }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  labels:
    {{- include "rabbitmq.defaultLabels" . | nindent 4 }}
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
data:
{{- if not .Values.global.tls.generateCerts.enabled }}
  tls.crt: {{ .Values.disasterRecovery.tls.certificates.crt | quote }}
  tls.key: {{ .Values.disasterRecovery.tls.certificates.key | quote }}
  ca.crt: {{ .Values.disasterRecovery.tls.certificates.ca | quote }}
{{- else }}
{{ include "disasterRecovery.generateCerts" . | indent 2 }}
{{- end }}
{{- end }}
{{- end }}
