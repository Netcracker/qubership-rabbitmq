{{- $secretName := include "rabbitmq.tlsSecretName" . }}
{{- $install := and .Values.global.tls.enabled (not .Values.externalRabbitmq.enabled) .Values.rabbitmq.tls.enabled }}
{{- if and $install (eq (include "services.certProvider" .) "helm") (or (and .Values.global.tls.generateCerts.enabled (not (lookup "v1" "Secret" .Release.Namespace $secretName))) (and (not .Values.global.tls.generateCerts.enabled) (eq (include "rabbitmq.certificatesSpecified" .) "true"))) }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  labels:
    {{- include "rabbitmq.defaultLabels" . | nindent 4 }}
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/resource-policy": keep
data:
{{- if not .Values.global.tls.generateCerts.enabled }}
  tls.crt: {{ .Values.rabbitmq.tls.certificates.crt | quote }}
  tls.key: {{ .Values.rabbitmq.tls.certificates.key | quote }}
  ca.crt: {{ .Values.rabbitmq.tls.certificates.ca | quote }}
{{- else }}
{{ ( include "rabbitmq.generateCerts" . ) | indent 2 }}
{{- end }}
{{- end }}
