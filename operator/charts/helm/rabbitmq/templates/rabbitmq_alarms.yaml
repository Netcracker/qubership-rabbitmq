{{ if and (eq (include "monitoring.enabled" .) "true") (not .Values.externalRabbitmq.enabled) }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    {{- include "rabbitmq.coreLabels" . | nindent 4 }}
    app.kubernetes.io/component: monitoring
    prometheus: rabbitmq-service-metric-collector
    role: alert-rules
  name: prometheus-rabbitmq-service-rules
spec:
  groups:
  - name: {{ .Release.Namespace }}-{{ .Release.Name }}-general.rules
    rules:
    - alert: ClusterError
      annotations:
        description: "Cluster is unavailable or there's more then one cluster in the namespace"
        summary: RabbitMQ cluster is misconfigured
      expr: count(count by (rabbitmq_cluster) (rabbitmq_identity_info{namespace="{{ .Release.Namespace }}"})) != 1
      for: "1m"
      labels:
        service: {{ .Release.Name }}
        namespace: {{ .Release.Namespace }}
        severity: high
    - alert: SomePodsAreNotWorking
      annotations:
        description: "Some or all pods are not responding/working"
        summary: Some or all pods are not working
      expr: sum(rabbitmq_build_info{namespace="{{ .Release.Namespace }}"} * on(instance) group_left(rabbitmq_cluster) rabbitmq_identity_info{rabbitmq_cluster="{{ .Values.rabbitmq.custom_params.rabbitmq_cluster_name }}",namespace="{{ .Release.Namespace }}"})/sum(kube_pod_info{exported_namespace="{{ .Release.Namespace }}", exported_pod=~"^rmqlocal-[0-9]+$|^rmqlocal-[0-9]+-0$"})<1
      for: "1m"
      labels:
        service: {{ .Release.Name }}
        namespace: {{ .Release.Namespace }}
        severity: critical
    - alert: MemoryAlarm
      annotations:
        description: "Memory alarm was triggered"
        summary: Memory alarm was triggered
      expr: (rabbitmq_resident_memory_limit_bytes{namespace="{{ .Release.Namespace }}"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster="{{ .Values.rabbitmq.custom_params.rabbitmq_cluster_name }}",namespace="{{ .Release.Namespace }}"}) - (rabbitmq_process_resident_memory_bytes{namespace="{{ .Release.Namespace }}"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster="{{ .Values.rabbitmq.custom_params.rabbitmq_cluster_name }}",namespace="{{ .Release.Namespace }}"}) < 0
      for: "1m"
      labels:
        service: {{ .Release.Name }}
        namespace: {{ .Release.Namespace }}
        severity: high
    - alert: DiskAlarm
      annotations:
        description: "Disk alarm was triggered"
        summary: Disk alarm was triggered
      expr: rabbitmq_disk_space_available_bytes{namespace="{{ .Release.Namespace }}"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster="{{ .Values.rabbitmq.custom_params.rabbitmq_cluster_name }}",namespace="{{ .Release.Namespace }}"} < 50000000
      for: "1m"
      labels:
        service: {{ .Release.Name }}
        namespace: {{ .Release.Namespace }}
        severity: high
    - alert: NoMetrics
      annotations:
        description: "No metrics is sent"
        summary: No metrics is sent
      expr: absent(rabbitmq_identity_info{namespace="{{ .Release.Namespace }}"})
      for: "1m"
      labels:
        service: {{ .Release.Name }}
        namespace: {{ .Release.Namespace }}
        severity: critical
{{ end }}