---
kind: Template
apiVersion: v1
metadata:
  name: rabbitmq-backup-daemon
  annotations:
    openshift.io/display-name: rabbitmq backup daemon
labels:
  template: rabbitmq-backup-daemon-template
parameters:
- name: BACKUP_CPU_REQUEST
  description: CPU core request
  value: 150m
  required: false
- name: BACKUP_CPU_LIMIT
  description: CPU core limit
  value: 300m
  required: false
- name: BACKUP_MEMORY_REQUEST
  description: Memory request
  value: 150Mi
  required: false
- name: BACKUP_MEMORY_LIMIT
  description: Memory limit
  value: 300Mi
  required: false
- description: Which docker image should be used to deploy.
  displayName: Docker image.
  name: BACKUP_DOCKER_TAG
  required: true
- name: BACKUP_STORAGE_NODE
  description: backup storage pv
  required: false
  value: "None"
- name: BACKUP_SCHEDULE
  description: backup schedule
  required: false
  value: "None"
- name: BACKUP_LOG_LEVEL
  description: backup logging
  required: false
  value: "INFO"
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: rabbitmq-backup-daemon
      labels:
        app: rabbitmq-backup-daemon
        microservice: rabbitmq-backup-daemon
    spec:
      ports:
      - name: http
        port: 8080
        targetPort: 8080
      selector:
        name: rabbitmq-backup-daemon
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: rabbitmq-backup-daemon.monitoring-config
      labels:
        app: rabbitmq-backup-daemon
        microservice: rabbitmq-backup-daemon
    data:
      url.health: http://%(ip)s:8080/health
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: rabbitmq-backup-daemon
      labels:
        app: rabbitmq-backup-daemon
    spec:
      replicas: 1
      selector:
        app: rabbitmq-backup-daemon
        deploymentconfig: rabbitmq-backup-daemon
        name: rabbitmq-backup-daemon
      template:
        metadata:
          labels:
            app: rabbitmq-backup-daemon
            deploymentconfig: rabbitmq-backup-daemon
            name: rabbitmq-backup-daemon
        spec:
          containers:
            - name: rabbitmq-backup-daemon
              image: "${BACKUP_DOCKER_TAG}"
              env:
                - name: BACKUP_SCHEDULE
                  value: "${BACKUP_SCHEDULE}"
                - name: LOG_LEVEL
                  value: "${BACKUP_LOG_LEVEL}"
              resources:
                limits:
                  cpu: "${BACKUP_CPU_LIMIT}"
                  memory: "${BACKUP_MEMORY_LIMIT}"
                requests:
                  cpu: "${BACKUP_CPU_REQUEST}"
                  memory: "${BACKUP_MEMORY_REQUEST}"
              ports:
                - name: http
                  containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - mountPath: "/backup-storage"
                  name: backup-storage
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: rabbitmq-backup-storage
